"""init db

Revision ID: 1de256f038fa
Revises: 
Create Date: 2024-04-25 17:24:57.701663

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '1de256f038fa'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('abouts',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('header', sa.String(), nullable=True),
    sa.Column('text', sa.Text(), nullable=True),
    sa.Column('date', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('faq',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('header', sa.String(), nullable=True),
    sa.Column('text', sa.Text(), nullable=True),
    sa.Column('date', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('forum',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('question', sa.String(), nullable=True),
    sa.Column('answer', sa.Text(), nullable=True),
    sa.Column('date', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('logs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('dev_id', sa.String(length=25), nullable=True),
    sa.Column('message', sa.Text(), nullable=True),
    sa.Column('disable', sa.Boolean(), nullable=True),
    sa.Column('date', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('subscriptions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('mail', sa.String(length=50), nullable=True),
    sa.Column('date', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('mail')
    )
    op.create_table('users',
    sa.Column('username', sa.String(length=50), nullable=False),
    sa.Column('email', sa.String(length=50), nullable=False),
    sa.Column('hashed_password', sa.String(length=250), nullable=True),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('surname', sa.String(length=50), nullable=False),
    sa.Column('address', sa.Text(), nullable=False),
    sa.Column('admin', sa.Boolean(), nullable=False),
    sa.Column('premium', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('delisted', sa.Boolean(), nullable=False),
    sa.Column('secret', sa.String(length=50), nullable=True),
    sa.PrimaryKeyConstraint('username'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('secret'),
    sa.UniqueConstraint('username')
    )
    op.create_table('notifications',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user', sa.String(length=25), nullable=False),
    sa.Column('message', sa.Text(), nullable=True),
    sa.Column('read', sa.Boolean(), nullable=True),
    sa.Column('date', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['user'], ['users.username'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('systems',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('owner', sa.String(length=50), nullable=False),
    sa.Column('systemID', sa.String(length=25), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('area', sa.Float(), nullable=True),
    sa.Column('fruit', sa.String(length=250), nullable=True),
    sa.Column('location', sa.String(length=100), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['owner'], ['users.username'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('systemID')
    )
    op.create_index(op.f('ix_systems_id'), 'systems', ['id'], unique=False)
    op.create_table('pumps',
    sa.Column('pump_id', sa.String(length=25), nullable=False),
    sa.Column('system_id', sa.Integer(), nullable=False),
    sa.Column('capacity', sa.Float(), nullable=True),
    sa.Column('current', sa.Float(), nullable=True),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['system_id'], ['systems.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('pump_id'),
    sa.UniqueConstraint('pump_id')
    )
    op.create_table('sensors',
    sa.Column('sensor_id', sa.String(length=25), nullable=False),
    sa.Column('system_id', sa.Integer(), nullable=False),
    sa.Column('readings', sa.Float(), nullable=True),
    sa.Column('temp', sa.Float(), nullable=True),
    sa.Column('set_lvl_1', sa.Boolean(), nullable=True),
    sa.Column('set_lvl_2', sa.Boolean(), nullable=True),
    sa.Column('set_lvl_3', sa.Boolean(), nullable=True),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['system_id'], ['systems.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('sensor_id'),
    sa.UniqueConstraint('sensor_id')
    )
    op.create_table('shifts',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('system_id', sa.Integer(), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['system_id'], ['systems.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('valves',
    sa.Column('valve_id', sa.String(length=25), nullable=False),
    sa.Column('system_id', sa.Integer(), nullable=False),
    sa.Column('status', sa.Boolean(), nullable=True),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['system_id'], ['systems.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('valve_id'),
    sa.UniqueConstraint('valve_id')
    )
    op.create_table('flow_data',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('pump_id', sa.String(length=25), nullable=False),
    sa.Column('flow_rate', sa.Float(), nullable=True),
    sa.Column('date', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['pump_id'], ['pumps.pump_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('sections',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('shift_id', sa.Integer(), nullable=False),
    sa.Column('valve_id', sa.String(length=25), nullable=True),
    sa.Column('sensors_settings', sa.String(length=25), nullable=True),
    sa.Column('starts_at', sa.Float(), nullable=True),
    sa.Column('stops_at', sa.Float(), nullable=True),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['shift_id'], ['shifts.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('valve_id')
    )
    op.create_table('sensor_data',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('sensor_id', sa.String(length=25), nullable=False),
    sa.Column('level_1', sa.Float(), nullable=True),
    sa.Column('level_2', sa.Float(), nullable=True),
    sa.Column('level_3', sa.Float(), nullable=True),
    sa.Column('temp_1', sa.Float(), nullable=True),
    sa.Column('temp_2', sa.Float(), nullable=True),
    sa.Column('temp_3', sa.Float(), nullable=True),
    sa.Column('temperature', sa.Float(), nullable=True),
    sa.Column('moisture', sa.Float(), nullable=True),
    sa.Column('bat_level', sa.Float(), nullable=True),
    sa.Column('date', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['sensor_id'], ['sensors.sensor_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('timers',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('shift_id', sa.Integer(), nullable=False),
    sa.Column('Mon', sa.Boolean(), nullable=True),
    sa.Column('Tue', sa.Boolean(), nullable=True),
    sa.Column('Wed', sa.Boolean(), nullable=True),
    sa.Column('Thu', sa.Boolean(), nullable=True),
    sa.Column('Fri', sa.Boolean(), nullable=True),
    sa.Column('Sat', sa.Boolean(), nullable=True),
    sa.Column('Sun', sa.Boolean(), nullable=True),
    sa.Column('starts', sa.Time(), nullable=True),
    sa.Column('stops', sa.Time(), nullable=True),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['shift_id'], ['shifts.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('sensor_controlers',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('section_id', sa.Integer(), nullable=False),
    sa.Column('sensor_id', sa.String(length=25), nullable=True),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['section_id'], ['sections.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('sensor_controlers')
    op.drop_table('timers')
    op.drop_table('sensor_data')
    op.drop_table('sections')
    op.drop_table('flow_data')
    op.drop_table('valves')
    op.drop_table('shifts')
    op.drop_table('sensors')
    op.drop_table('pumps')
    op.drop_index(op.f('ix_systems_id'), table_name='systems')
    op.drop_table('systems')
    op.drop_table('notifications')
    op.drop_table('users')
    op.drop_table('subscriptions')
    op.drop_table('logs')
    op.drop_table('forum')
    op.drop_table('faq')
    op.drop_table('abouts')
    # ### end Alembic commands ###
